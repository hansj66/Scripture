Grammar

    0 $accept: program "end of file"

    1 program: function_declaration_list

    2 function_declaration_list: function_declaration
    3                          | function_declaration_list function_declaration

    4 function_declaration: type Identifier ARGUMENT_PROLOG parameter_declaration_list function_body

    5 type: NumberType
    6     | TextType
    7     | VoidType

    8 parameter_declaration_list: parameter_declaration
    9                           | parameter_declaration_list SEPARATOR parameter_declaration
   10                           | %empty

   11 parameter_declaration: type Identifier
   12                      | type Identifier ASSIGN expression

   13 function_body: BEGIN_SCOPE statement_list END_SCOPE

   14 statement_list: statement
   15               | statement_list statement

   16 statement: parameter_declaration ';'
   17          | assignment ';'
   18          | print ';'
   19          | function_call ';'
   20          | while_loop
   21          | if
   22          | return ';'

   23 return: RETURN expression

   24 while_loop: While expression function_body

   25 function_call: FUNCTION_CALL_PROLOG Identifier EXPRESSION_PROLOG expression_list FUNCTION_CALL_EPILOG

   26 if: IF expression function_body
   27   | IF expression function_body ELSE function_body

   28 print: PRINT expression PRINT_EPILOG

   29 assignment: Identifier ASSIGN expression

   30 expression_list: expression
   31                | expression_list SEPARATOR expression
   32                | %empty

   33 expression: Identifier
   34           | String
   35           | Number
   36           | function_call
   37           | '-' expression
   38           | expression ADD expression
   39           | expression SUB expression
   40           | expression MUL expression MUL_DIV_EPILOG
   41           | expression DIV expression MUL_DIV_EPILOG
   42           | expression LT expression
   43           | expression GT expression
   44           | expression GE expression
   45           | expression LE expression
   46           | expression NE expression
   47           | expression EQ expression
   48           | '(' expression ')'


Terminals, with rules where they appear

"end of file" (0) 0
'(' (40) 48
')' (41) 48
'-' (45) 37
';' (59) 16 17 18 19 22
error (256)
GE (258) 44
LE (259) 45
EQ (260) 47
NE (261) 46
GT (262) 43
LT (263) 42
SUB (264) 39
ADD (265) 38
MUL (266) 40
DIV (267) 41
UMINUS (268)
IFX (269)
ELSE (270) 27
IF (271) 26 27
While (272) 24
PRINT (273) 28
RETURN (274) 23
NumberType (275) 5
TextType (276) 6
VoidType (277) 7
BEGIN_SCOPE (278) 13
END_SCOPE (279) 13
SEPARATOR (280) 9 31
ARGUMENT_PROLOG (281) 4
FUNCTION_CALL_PROLOG (282) 25
FUNCTION_CALL_EPILOG (283) 25
EXPRESSION_PROLOG (284) 25
PRINT_EPILOG (285) 28
ASSIGN (286) 12 29
MUL_DIV_EPILOG (287) 40 41
Number (288) 35
Identifier (289) 4 11 12 25 29 33
String (290) 34


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
function_declaration_list (42)
    on left: 2 3, on right: 1 3
function_declaration (43)
    on left: 4, on right: 2 3
type (44)
    on left: 5 6 7, on right: 4 11 12
parameter_declaration_list (45)
    on left: 8 9 10, on right: 4 9
parameter_declaration (46)
    on left: 11 12, on right: 8 9 16
function_body (47)
    on left: 13, on right: 4 24 26 27
statement_list (48)
    on left: 14 15, on right: 13 15
statement (49)
    on left: 16 17 18 19 20 21 22, on right: 14 15
return (50)
    on left: 23, on right: 22
while_loop (51)
    on left: 24, on right: 20
function_call (52)
    on left: 25, on right: 19 36
if (53)
    on left: 26 27, on right: 21
print (54)
    on left: 28, on right: 18
assignment (55)
    on left: 29, on right: 17
expression_list (56)
    on left: 30 31 32, on right: 25 31
expression (57)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48, on right:
    12 23 24 26 27 28 29 30 31 37 38 39 40 41 42 43 44 45 46 47 48


State 0

    0 $accept: . program "end of file"

    NumberType  shift, and go to state 1
    TextType    shift, and go to state 2
    VoidType    shift, and go to state 3

    program                    go to state 4
    function_declaration_list  go to state 5
    function_declaration       go to state 6
    type                       go to state 7


State 1

    5 type: NumberType .

    $default  reduce using rule 5 (type)


State 2

    6 type: TextType .

    $default  reduce using rule 6 (type)


State 3

    7 type: VoidType .

    $default  reduce using rule 7 (type)


State 4

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 8


State 5

    1 program: function_declaration_list .
    3 function_declaration_list: function_declaration_list . function_declaration

    NumberType  shift, and go to state 1
    TextType    shift, and go to state 2
    VoidType    shift, and go to state 3

    $default  reduce using rule 1 (program)

    function_declaration  go to state 9
    type                  go to state 7


State 6

    2 function_declaration_list: function_declaration .

    $default  reduce using rule 2 (function_declaration_list)


State 7

    4 function_declaration: type . Identifier ARGUMENT_PROLOG parameter_declaration_list function_body

    Identifier  shift, and go to state 10


State 8

    0 $accept: program "end of file" .

    $default  accept


State 9

    3 function_declaration_list: function_declaration_list function_declaration .

    $default  reduce using rule 3 (function_declaration_list)


State 10

    4 function_declaration: type Identifier . ARGUMENT_PROLOG parameter_declaration_list function_body

    ARGUMENT_PROLOG  shift, and go to state 11


State 11

    4 function_declaration: type Identifier ARGUMENT_PROLOG . parameter_declaration_list function_body

    NumberType  shift, and go to state 1
    TextType    shift, and go to state 2
    VoidType    shift, and go to state 3

    $default  reduce using rule 10 (parameter_declaration_list)

    type                        go to state 12
    parameter_declaration_list  go to state 13
    parameter_declaration       go to state 14


State 12

   11 parameter_declaration: type . Identifier
   12                      | type . Identifier ASSIGN expression

    Identifier  shift, and go to state 15


State 13

    4 function_declaration: type Identifier ARGUMENT_PROLOG parameter_declaration_list . function_body
    9 parameter_declaration_list: parameter_declaration_list . SEPARATOR parameter_declaration

    BEGIN_SCOPE  shift, and go to state 16
    SEPARATOR    shift, and go to state 17

    function_body  go to state 18


State 14

    8 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 8 (parameter_declaration_list)


State 15

   11 parameter_declaration: type Identifier .
   12                      | type Identifier . ASSIGN expression

    ASSIGN  shift, and go to state 19

    $default  reduce using rule 11 (parameter_declaration)


State 16

   13 function_body: BEGIN_SCOPE . statement_list END_SCOPE

    IF                    shift, and go to state 20
    While                 shift, and go to state 21
    PRINT                 shift, and go to state 22
    RETURN                shift, and go to state 23
    NumberType            shift, and go to state 1
    TextType              shift, and go to state 2
    VoidType              shift, and go to state 3
    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Identifier            shift, and go to state 25

    type                   go to state 12
    parameter_declaration  go to state 26
    statement_list         go to state 27
    statement              go to state 28
    return                 go to state 29
    while_loop             go to state 30
    function_call          go to state 31
    if                     go to state 32
    print                  go to state 33
    assignment             go to state 34


State 17

    9 parameter_declaration_list: parameter_declaration_list SEPARATOR . parameter_declaration

    NumberType  shift, and go to state 1
    TextType    shift, and go to state 2
    VoidType    shift, and go to state 3

    type                   go to state 12
    parameter_declaration  go to state 35


State 18

    4 function_declaration: type Identifier ARGUMENT_PROLOG parameter_declaration_list function_body .

    $default  reduce using rule 4 (function_declaration)


State 19

   12 parameter_declaration: type Identifier ASSIGN . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 42


State 20

   26 if: IF . expression function_body
   27   | IF . expression function_body ELSE function_body

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 43


State 21

   24 while_loop: While . expression function_body

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 44


State 22

   28 print: PRINT . expression PRINT_EPILOG

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 45


State 23

   23 return: RETURN . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 46


State 24

   25 function_call: FUNCTION_CALL_PROLOG . Identifier EXPRESSION_PROLOG expression_list FUNCTION_CALL_EPILOG

    Identifier  shift, and go to state 47


State 25

   29 assignment: Identifier . ASSIGN expression

    ASSIGN  shift, and go to state 48


State 26

   16 statement: parameter_declaration . ';'

    ';'  shift, and go to state 49


State 27

   13 function_body: BEGIN_SCOPE statement_list . END_SCOPE
   15 statement_list: statement_list . statement

    IF                    shift, and go to state 20
    While                 shift, and go to state 21
    PRINT                 shift, and go to state 22
    RETURN                shift, and go to state 23
    NumberType            shift, and go to state 1
    TextType              shift, and go to state 2
    VoidType              shift, and go to state 3
    END_SCOPE             shift, and go to state 50
    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Identifier            shift, and go to state 25

    type                   go to state 12
    parameter_declaration  go to state 26
    statement              go to state 51
    return                 go to state 29
    while_loop             go to state 30
    function_call          go to state 31
    if                     go to state 32
    print                  go to state 33
    assignment             go to state 34


State 28

   14 statement_list: statement .

    $default  reduce using rule 14 (statement_list)


State 29

   22 statement: return . ';'

    ';'  shift, and go to state 52


State 30

   20 statement: while_loop .

    $default  reduce using rule 20 (statement)


State 31

   19 statement: function_call . ';'

    ';'  shift, and go to state 53


State 32

   21 statement: if .

    $default  reduce using rule 21 (statement)


State 33

   18 statement: print . ';'

    ';'  shift, and go to state 54


State 34

   17 statement: assignment . ';'

    ';'  shift, and go to state 55


State 35

    9 parameter_declaration_list: parameter_declaration_list SEPARATOR parameter_declaration .

    $default  reduce using rule 9 (parameter_declaration_list)


State 36

   35 expression: Number .

    $default  reduce using rule 35 (expression)


State 37

   33 expression: Identifier .

    $default  reduce using rule 33 (expression)


State 38

   34 expression: String .

    $default  reduce using rule 34 (expression)


State 39

   37 expression: '-' . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 56


State 40

   48 expression: '(' . expression ')'

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 57


State 41

   36 expression: function_call .

    $default  reduce using rule 36 (expression)


State 42

   12 parameter_declaration: type Identifier ASSIGN expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE   shift, and go to state 58
    LE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61
    GT   shift, and go to state 62
    LT   shift, and go to state 63
    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 12 (parameter_declaration)


State 43

   26 if: IF expression . function_body
   27   | IF expression . function_body ELSE function_body
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE           shift, and go to state 58
    LE           shift, and go to state 59
    EQ           shift, and go to state 60
    NE           shift, and go to state 61
    GT           shift, and go to state 62
    LT           shift, and go to state 63
    SUB          shift, and go to state 64
    ADD          shift, and go to state 65
    MUL          shift, and go to state 66
    DIV          shift, and go to state 67
    BEGIN_SCOPE  shift, and go to state 16

    function_body  go to state 68


State 44

   24 while_loop: While expression . function_body
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE           shift, and go to state 58
    LE           shift, and go to state 59
    EQ           shift, and go to state 60
    NE           shift, and go to state 61
    GT           shift, and go to state 62
    LT           shift, and go to state 63
    SUB          shift, and go to state 64
    ADD          shift, and go to state 65
    MUL          shift, and go to state 66
    DIV          shift, and go to state 67
    BEGIN_SCOPE  shift, and go to state 16

    function_body  go to state 69


State 45

   28 print: PRINT expression . PRINT_EPILOG
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE            shift, and go to state 58
    LE            shift, and go to state 59
    EQ            shift, and go to state 60
    NE            shift, and go to state 61
    GT            shift, and go to state 62
    LT            shift, and go to state 63
    SUB           shift, and go to state 64
    ADD           shift, and go to state 65
    MUL           shift, and go to state 66
    DIV           shift, and go to state 67
    PRINT_EPILOG  shift, and go to state 70


State 46

   23 return: RETURN expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE   shift, and go to state 58
    LE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61
    GT   shift, and go to state 62
    LT   shift, and go to state 63
    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 23 (return)


State 47

   25 function_call: FUNCTION_CALL_PROLOG Identifier . EXPRESSION_PROLOG expression_list FUNCTION_CALL_EPILOG

    EXPRESSION_PROLOG  shift, and go to state 71


State 48

   29 assignment: Identifier ASSIGN . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 72


State 49

   16 statement: parameter_declaration ';' .

    $default  reduce using rule 16 (statement)


State 50

   13 function_body: BEGIN_SCOPE statement_list END_SCOPE .

    $default  reduce using rule 13 (function_body)


State 51

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 52

   22 statement: return ';' .

    $default  reduce using rule 22 (statement)


State 53

   19 statement: function_call ';' .

    $default  reduce using rule 19 (statement)


State 54

   18 statement: print ';' .

    $default  reduce using rule 18 (statement)


State 55

   17 statement: assignment ';' .

    $default  reduce using rule 17 (statement)


State 56

   37 expression: '-' expression .
   38           | expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    $default  reduce using rule 37 (expression)


State 57

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression
   48           | '(' expression . ')'

    GE   shift, and go to state 58
    LE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61
    GT   shift, and go to state 62
    LT   shift, and go to state 63
    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67
    ')'  shift, and go to state 73


State 58

   44 expression: expression GE . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 74


State 59

   45 expression: expression LE . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 75


State 60

   47 expression: expression EQ . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 76


State 61

   46 expression: expression NE . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 77


State 62

   43 expression: expression GT . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 78


State 63

   42 expression: expression LT . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 79


State 64

   39 expression: expression SUB . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 80


State 65

   38 expression: expression ADD . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 81


State 66

   40 expression: expression MUL . expression MUL_DIV_EPILOG

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 82


State 67

   41 expression: expression DIV . expression MUL_DIV_EPILOG

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 83


State 68

   26 if: IF expression function_body .
   27   | IF expression function_body . ELSE function_body

    ELSE  shift, and go to state 84

    $default  reduce using rule 26 (if)


State 69

   24 while_loop: While expression function_body .

    $default  reduce using rule 24 (while_loop)


State 70

   28 print: PRINT expression PRINT_EPILOG .

    $default  reduce using rule 28 (print)


State 71

   25 function_call: FUNCTION_CALL_PROLOG Identifier EXPRESSION_PROLOG . expression_list FUNCTION_CALL_EPILOG

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    $default  reduce using rule 32 (expression_list)

    function_call    go to state 41
    expression_list  go to state 85
    expression       go to state 86


State 72

   29 assignment: Identifier ASSIGN expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE   shift, and go to state 58
    LE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61
    GT   shift, and go to state 62
    LT   shift, and go to state 63
    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 29 (assignment)


State 73

   48 expression: '(' expression ')' .

    $default  reduce using rule 48 (expression)


State 74

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   44           | expression GE expression .
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 44 (expression)


State 75

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   45           | expression LE expression .
   46           | expression . NE expression
   47           | expression . EQ expression

    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 45 (expression)


State 76

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression
   47           | expression EQ expression .

    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 47 (expression)


State 77

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   46           | expression NE expression .
   47           | expression . EQ expression

    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 46 (expression)


State 78

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   43           | expression GT expression .
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 43 (expression)


State 79

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   42           | expression LT expression .
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 42 (expression)


State 80

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   39           | expression SUB expression .
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 39 (expression)


State 81

   38 expression: expression . ADD expression
   38           | expression ADD expression .
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 38 (expression)


State 82

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   40           | expression MUL expression . MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE              shift, and go to state 58
    LE              shift, and go to state 59
    EQ              shift, and go to state 60
    NE              shift, and go to state 61
    GT              shift, and go to state 62
    LT              shift, and go to state 63
    SUB             shift, and go to state 64
    ADD             shift, and go to state 65
    MUL             shift, and go to state 66
    DIV             shift, and go to state 67
    MUL_DIV_EPILOG  shift, and go to state 87


State 83

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   41           | expression DIV expression . MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE              shift, and go to state 58
    LE              shift, and go to state 59
    EQ              shift, and go to state 60
    NE              shift, and go to state 61
    GT              shift, and go to state 62
    LT              shift, and go to state 63
    SUB             shift, and go to state 64
    ADD             shift, and go to state 65
    MUL             shift, and go to state 66
    DIV             shift, and go to state 67
    MUL_DIV_EPILOG  shift, and go to state 88


State 84

   27 if: IF expression function_body ELSE . function_body

    BEGIN_SCOPE  shift, and go to state 16

    function_body  go to state 89


State 85

   25 function_call: FUNCTION_CALL_PROLOG Identifier EXPRESSION_PROLOG expression_list . FUNCTION_CALL_EPILOG
   31 expression_list: expression_list . SEPARATOR expression

    SEPARATOR             shift, and go to state 90
    FUNCTION_CALL_EPILOG  shift, and go to state 91


State 86

   30 expression_list: expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE   shift, and go to state 58
    LE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61
    GT   shift, and go to state 62
    LT   shift, and go to state 63
    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 30 (expression_list)


State 87

   40 expression: expression MUL expression MUL_DIV_EPILOG .

    $default  reduce using rule 40 (expression)


State 88

   41 expression: expression DIV expression MUL_DIV_EPILOG .

    $default  reduce using rule 41 (expression)


State 89

   27 if: IF expression function_body ELSE function_body .

    $default  reduce using rule 27 (if)


State 90

   31 expression_list: expression_list SEPARATOR . expression

    FUNCTION_CALL_PROLOG  shift, and go to state 24
    Number                shift, and go to state 36
    Identifier            shift, and go to state 37
    String                shift, and go to state 38
    '-'                   shift, and go to state 39
    '('                   shift, and go to state 40

    function_call  go to state 41
    expression     go to state 92


State 91

   25 function_call: FUNCTION_CALL_PROLOG Identifier EXPRESSION_PROLOG expression_list FUNCTION_CALL_EPILOG .

    $default  reduce using rule 25 (function_call)


State 92

   31 expression_list: expression_list SEPARATOR expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression MUL_DIV_EPILOG
   41           | expression . DIV expression MUL_DIV_EPILOG
   42           | expression . LT expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LE expression
   46           | expression . NE expression
   47           | expression . EQ expression

    GE   shift, and go to state 58
    LE   shift, and go to state 59
    EQ   shift, and go to state 60
    NE   shift, and go to state 61
    GT   shift, and go to state 62
    LT   shift, and go to state 63
    SUB  shift, and go to state 64
    ADD  shift, and go to state 65
    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 31 (expression_list)
